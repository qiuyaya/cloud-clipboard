# Dependencies (构建阶段会重新安装)
node_modules
*/node_modules
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs (构建阶段会重新生成)
dist
*/dist
build
*/build

# Desktop app (不需要在Docker中)
desktop

# 运行时不需要的构建脚本
scripts/sync-desktop-icons.js  
scripts/build-client.js
scripts/release.js
scripts/version-sync.js
scripts/coverage-report.js

# Development files
.git
.gitignore
*.md
README.md
CHANGELOG.md
LICENSE
.env.local
.env.development
.env.test

# 各种配置文件
.prettierrc*
.eslintrc*
tsconfig.json
*/tsconfig.json
vite.config.*
vitest.config.*
playwright.config.*

# IDE files
.vscode
.idea
*.swp
*.swo
*~

# OS files
.DS_Store
Thumbs.db

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Docker files (avoid recursive copying)
Dockerfile*
docker-compose*.yml
.dockerignore

# Development and testing
test
tests
__tests__
*.test.js
*.test.ts
*.spec.js
*.spec.ts

# Source maps
*.map

# Temporary files
tmp
temp
.tmp

# User uploaded files (will be handled by volumes)
uploads
data

# Local development tools
.husky
.commitlintrc.json
.eslintcache

# CI/CD files
.github
.gitlab-ci.yml
.travis.yml
.circleci

# Documentation
docs
documentation

# Example files
examples
demos